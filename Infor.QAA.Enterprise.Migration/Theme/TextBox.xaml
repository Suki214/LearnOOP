<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Copyright © 2012 Infor. All rights reserved. The word and design marks set forth herein are trademarks and/or registered trademarks of Infor and/or its affiliates and subsidiaries.
    All rights reserved. All other trademarks listed herein are the property of their respective owners. www.infor.com.-->

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Shared.xaml" />       
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="roundCornerTextbox-template-ux3" TargetType="TextBox">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="1" Name="BorderTextBox" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                <ScrollViewer Name="PART_ContentHost" Foreground="{TemplateBinding Foreground}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BorderTextBox" Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Opacity" Value="0.5 "/>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="BorderTextBox" Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused"  Value="True"></Condition>
                    <Condition Property="IsEnabled" Value="True"></Condition>
                    <Condition Property="IsReadOnly" Value="False"></Condition>
                </MultiTrigger.Conditions>
                <Setter TargetName="BorderTextBox" Property="BorderBrush"  Value="{StaticResource azure-brush-ux3}" />
                <Setter Property="Background" Value="Transparent"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="required-roundCornerTextbox-template-ux3" TargetType="TextBox">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Image Name="RequiredIndicator" Grid.Column="0" Source="../images/icn_required.png" Width="7" Height="7" VerticalAlignment="Center"/>
            <Border Grid.Column="1" Name="BorderTextBox" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="#b3b3b3" BorderThickness="1">
                <ScrollViewer Name="PART_ContentHost" Foreground="{TemplateBinding Foreground}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BorderTextBox" Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Opacity" Value="0.5 "/>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="BorderTextBox" Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused"  Value="True"></Condition>
                    <Condition Property="IsEnabled" Value="True"></Condition>
                    <Condition Property="IsReadOnly" Value="False"></Condition>
                </MultiTrigger.Conditions>
                <Setter TargetName="BorderTextBox" Property="BorderBrush"  Value="{StaticResource azure-brush-ux3}" />
                <Setter Property="Background" Value="Transparent"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--textbox-ux3 START
    see "http://wiki.lawson.com/display/INFORUX3/Text+Input+Field"
    Usage Guidelines:
       Use a text box when users can type in a value that is limited in length (for longer text strings such as notes or comments, use a scrollable text area).
    -->
    <Style TargetType="TextBox" x:Key="textbox-ux3" BasedOn="{StaticResource base-control-ux3}">
        <Setter Property="MinWidth" Value="100"></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="#1a1a1a"></Setter>
        <Setter Property="Template" Value="{StaticResource roundCornerTextbox-template-ux3}"></Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel>
                        <Border Background="{StaticResource error-red-foreground-brush-ux3}" DockPanel.Dock="right" Margin="-20,0,0,0" Width="13" Height="13" CornerRadius="10"
                                ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                            <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" FontWeight="Bold" Foreground="{StaticResource white-brush-ux3}">
                            </TextBlock>
                        </Border>
                        <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" />
                    </DockPanel>
                </ControlTemplate>
                <!-- TODO: below is the incomplete style definition for UX3.0. to be finished.
                <ControlTemplate >
                    <StackPanel Orientation="Horizontal">
                        <Border>
                            <Grid>
                                <Polygon x:Name="toolTipCorner" Grid.ZIndex="2" Margin="-1" Points="6,6 6,0 0,0"  Fill="#FFdc000c" 
                                         HorizontalAlignment="Right"  VerticalAlignment="Top" 
                                         IsHitTestVisible="True"/>
                                <Polyline Grid.ZIndex="3" Points="7,7 0,0" Margin="-1" HorizontalAlignment="Right" StrokeThickness="1.5" 
                                          StrokeEndLineCap="Round" StrokeStartLineCap="Round" Stroke="White" VerticalAlignment="Top" IsHitTestVisible="True"/>
                                <AdornedElementPlaceholder x:Name="adorner"/>
                            </Grid>
                        </Border>
                        <Border x:Name="errorBorder" Background="#FFdc000c" Margin="1,0,0,0" Opacity="0" CornerRadius="1.5" IsHitTestVisible="False" BorderThickness="0">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="2.25" Color="Black"  Opacity="0.4" Direction="315" BlurRadius="4"/>
                            </Border.Effect>
                            <TextBlock Text="{Binding ElementName=adorner,Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" Foreground="White" Margin="8,3,8,3"
                                       TextWrapping="Wrap"/>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource BooleanOrConverter}"> need a converter
                                    <Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
                                    <Binding ElementName="toolTipCorner" Path="IsMouseOver"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="fadeInStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00.15"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="1"/>
                                        <ThicknessAnimation Duration="00:00:00.15"
                                            Storyboard.TargetName="errorBorder"
                                            Storyboard.TargetProperty="Margin"
                                            FillBehavior="HoldEnd"
                                            From="1,0,0,0"
                                            To="5,0,0,0">
                                            <ThicknessAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseOut" Amplitude="2"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                                <BeginStoryboard x:Name="fadeOutStoryBoard">
                                    <Storyboard>
                                        <DoubleAnimation Duration="00:00:00"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>-->
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="Background" Value="{StaticResource error-red-background-brush-ux3}"></Setter>
                <Setter Property="BorderBrush" Value="{StaticResource error-red-foreground-brush-ux3}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--text-button-ux3  END -->

    <!--required-textbox-ux3 START
    see "http://wiki.lawson.com/display/INFORUX3/Text+Input+Field"
    Usage Guidelines:
       Use a text box when users can type in a value that is limited in length (for longer text strings such as notes or comments, use a scrollable text area).
    -->
    <Style TargetType="TextBox" x:Key="required-textbox-ux3" BasedOn="{StaticResource base-control-ux3}">
        <Setter Property="MinWidth" Value="100"></Setter>
        <Setter Property="Height" Value="20"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Foreground" Value="#1a1a1a"></Setter>
        <Setter Property="Template" Value="{StaticResource required-roundCornerTextbox-template-ux3}"></Setter>
    </Style>
    <!--text-button-ux3  END -->


   

    <!--textbox style for multi-line input textbox .-->
    <Style TargetType="TextBox" x:Key="multi-line-textbox-ux3" BasedOn="{StaticResource textbox-ux3}">
        <Setter Property="Height" Value="Auto"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Top"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
        <Setter Property="AcceptsReturn" Value="True"></Setter>
    </Style>
    <!--multi-line-textbox-ux3  END -->

    <!--Search Textbox -->
    <ControlTemplate x:Key="searchTag" TargetType="{x:Type CheckBox}">
        <Image Name="SearchPng" Source="../images/search.png" Stretch="None" Height="18" Width="18" />
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" Color="Black" Direction="0" Opacity="0.3" RenderingBias="Performance" ShadowDepth="0"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="clearTag" TargetType="{x:Type CheckBox}">
        <Image Name="SearchPng" Source="../images/clear.png" Stretch="None" Height="18" Width="18" />
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" Color="Black" Direction="0" Opacity="0.3" RenderingBias="Performance" ShadowDepth="0"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <LinearGradientBrush  x:Key="SearchTextBoxFillBrush" StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0.0" Color="SteelBlue" />
            <GradientStop Offset="0.0" Color="Transparent" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
</ResourceDictionary>